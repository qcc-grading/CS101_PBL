accessible: true
author: ''
context: ''
environment: cpp
evaluate: best
groups: false
input_random: '0'
limits:
    output: '2'
    time: '30'
    memory: '100'
name: 51. Greatest commond divison by Euclidean Algorithm 
network_grading: false
order: 10
problems:
    gcd:
        default: ''
        language: c
        name: GCD via Euclidean Algorithm
        type: code
        header: |-
            Write only the *body* of a function called *gcd* which receives a pair of 
            integers :math:`a` and :math:`b` and returns the value of their greatest common
            divisor :math:`gcd(a,b)` by the Euclidean algorithm. 
            
            The algorithm requires the 
            computation of a sequence of remainders :math:`r_0, r_1, r_2, \ldots r_{n-1}, r_n` 
            defined by formula:

            .. math::
                r_n = \left\{ 
                	\begin{array}{rr} 
                	 a, & \text{if } n = 0 \\
                	 b, & \text{if } n = 1 \\
                	r_{n-1} \mod r_{n-2}, & \text{if } n \ge 2
                	\end{array}
                	\right.\, .

            The computation stops when :math:`r_n = 0` in which case the *gcd* is the last
            non-zero remainder :math:`r_{n-1}`. 

            **Hint:** The modulo operator (denoted by mod in mathematics or by :math:`\%`
            in C++) returns the integer remainder:

            .. math:: 
            	a \% b = r  \iff a =b\cdot q + r 
            
            with the remainder :math:`0\le r < b`. 

            Also, make sure to return the *absolute value* of the last non-zero reminder.

            .. code-block:: c

                int gcd( int a, int b )
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        id: timeout
        description: Your code exceeds the maximum allowed time.
        name: Timeout
        visible: true
        type: 1
    '1':
        type: 1
        id: sigsegv
        visible: true
        description: ''
        name: Segmentation Fault
    '2':
        id: not_compile
        description: You code does not compile.
        visible: true
        name: Not compile
        type: 1
    '3':
        id: memory
        name: Memory Exceeded
        visible: true
        description: ''
        type: 1
    '4':
        description: ''
        visible: true
        type: 1
        name: Floating Point Exception
        id: sigfpe
    '5':
        description: Your code produced a double free.
        type: 1
        id: double_free
        visible: true
        name: Double free
    '6':
        name: Banned functions
        id: banned_funcs
        description: You use some banned functions.
        type: 1
        visible: true
    '7':
        description: Your code does not compile with cppcheck
        visible: true
        id: cppcheck
        type: 1
        name: Cppcheck fails
    '8':
        name: S1
        type: 2
        visible: true
        description: ''
        id: ''
weight: 1.0
